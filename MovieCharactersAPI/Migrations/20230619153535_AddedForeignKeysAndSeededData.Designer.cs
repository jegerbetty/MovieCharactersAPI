// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieCharactersAPI.Data;

#nullable disable

namespace MovieCharactersAPI.Migrations
{
    [DbContext(typeof(MovieCharactersDbContext))]
    [Migration("20230619153535_AddedForeignKeysAndSeededData")]
    partial class AddedForeignKeysAndSeededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("MovieCharactersId")
                        .HasColumnType("int");

                    b.Property<int>("MovieCharactersId1")
                        .HasColumnType("int");

                    b.HasKey("MovieCharactersId", "MovieCharactersId1");

                    b.HasIndex("MovieCharactersId1");

                    b.ToTable("CharacterMovie");
                });

            modelBuilder.Entity("MovieCharactersAPI.Model.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CharacterPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "The White Wizard",
                            CharacterPicture = "https://static.wikia.nocookie.net/lotr/images/e/e7/Gandalf_the_Grey.jpg/revision/latest?cb=20121110131754",
                            FullName = "Gandalf the Grey",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "The Chosen One",
                            CharacterPicture = "https://periskop.no/wp-content/uploads/2021/02/Harry-Potter-med-tryllestaven.jpg",
                            FullName = "Harry Potter",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "He Who Shall Not Be Named",
                            CharacterPicture = "https://upload.wikimedia.org/wikipedia/en/a/a3/Lordvoldemort.jpg",
                            FullName = "Voldemort",
                            Gender = "Male"
                        });
                });

            modelBuilder.Entity("MovieCharactersAPI.Model.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The Lord of the Rings is the saga of a group of sometimes reluctant heroes who set forth to save their world from consummate evil. Its many worlds and creatures were drawn from Tolkien's extensive knowledge of philology and folklore.",
                            Name = "Lord of the Rings"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The films chronicle the lives of a young wizard, Harry Potter, and his friends Hermione Granger and Ron Weasley, all of whom are students at Hogwarts School of Witchcraft and Wizardry.",
                            Name = "Harry Potter"
                        });
                });

            modelBuilder.Entity("MovieCharactersAPI.Model.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FranchiseId1")
                        .HasColumnType("int");

                    b.Property<string>("MovieGenre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoviePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovieTrailer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId1");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Peter Jackson",
                            MovieGenre = "Fantasy",
                            MoviePicture = "https://m.media-amazon.com/images/I/51ILUdMuieL._AC_UF1000,1000_QL80_.jpg",
                            MovieTitle = "The Fellowship of the Ring",
                            MovieTrailer = "https://www.youtube.com/watch?v=V75dMMIW2B4&ab_channel=Movieclips",
                            ReleaseYear = 2001
                        },
                        new
                        {
                            Id = 2,
                            Director = "Peter Jackson",
                            MovieGenre = "Fantasy",
                            MoviePicture = "https://m.media-amazon.com/images/I/91+ni21hctL._UF1000,1000_QL80_.jpg",
                            MovieTitle = "The Return of the King",
                            MovieTrailer = "https://www.youtube.com/watch?v=y2rYRu8UW8M&ab_channel=RottenTomatoesClassicTrailers",
                            ReleaseYear = 2003
                        },
                        new
                        {
                            Id = 3,
                            Director = "Mike Newell",
                            MovieGenre = "Magical Adventure",
                            MoviePicture = "https://upload.wikimedia.org/wikipedia/en/c/c9/Harry_Potter_and_the_Goblet_of_Fire_Poster.jpg",
                            MovieTitle = "Harry Potter and the Goblet of Fire",
                            MovieTrailer = "https://www.youtube.com/watch?v=3EGojp4Hh6I&ab_channel=RottenTomatoesClassicTrailers",
                            ReleaseYear = 2005
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("MovieCharactersAPI.Model.Character", null)
                        .WithMany()
                        .HasForeignKey("MovieCharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieCharactersAPI.Model.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieCharactersId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieCharactersAPI.Model.Movie", b =>
                {
                    b.HasOne("MovieCharactersAPI.Model.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId1");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieCharactersAPI.Model.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
